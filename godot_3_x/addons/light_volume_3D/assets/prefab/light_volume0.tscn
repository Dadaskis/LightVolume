[gd_scene load_steps=9 format=2]

[ext_resource path="res://addons/light_volume_3D/assets/textures/volume0.tga" type="Texture" id=1]
[ext_resource path="res://addons/light_volume_3D/assets/textures/glow0.tga" type="Texture" id=2]

[sub_resource type="QuadMesh" id=1]

[sub_resource type="Shader" id=7]
code = "shader_type spatial;
render_mode blend_add, diffuse_lambert, specular_disabled, cull_back, depth_draw_opaque, shadows_disabled, unshaded;
 
//__ADD_PROPERTY::albedo_alpha_tex::TEXTURE
uniform sampler2D albedo_alpha_tex: hint_albedo;
//__ADD_PROPERTY::albedo_alpha_color::COLOR
uniform vec4 albedo_alpha_color: hint_color;
 
//__ADD_PROPERTY::distance_fade_distance_min::FLOAT
uniform float distance_fade_distance_min;
//__ADD_PROPERTY::distance_fade_distance_max::FLOAT
uniform float distance_fade_distance_max;
//__ADD_PROPERTY::proximity_fade_distance::FLOAT
uniform float proximity_fade_distance;
void vertex() {
	COLOR = COLOR;
	mat4 mat_world = mat4(
		normalize(CAMERA_MATRIX[0]) * length(WORLD_MATRIX[0]),
		normalize(CAMERA_MATRIX[1]) * length(WORLD_MATRIX[0]),
		normalize(CAMERA_MATRIX[2]) * length(WORLD_MATRIX[2]),
		WORLD_MATRIX[3]
	);
	
	mat_world = mat_world * mat4(
		vec4(
			cos(INSTANCE_CUSTOM.x), 
			-sin(INSTANCE_CUSTOM.x), 
			0.0, 
			0.0
		), 
		vec4(
			sin(INSTANCE_CUSTOM.x), 
			cos(INSTANCE_CUSTOM.x), 
			0.0, 
			0.0
		),
		vec4(0.0, 0.0, 1.0, 0.0),
		vec4(0.0, 0.0, 0.0, 1.0)
	);
	
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat_world;
}
void fragment() {
	ALBEDO = vec3(0.0);
	METALLIC = 0.0;
	SPECULAR = 0.0;
	ROUGHNESS = 1.0;
	AO = 1.0;
	vec2 _UV = UV;
	vec4 albedo_alpha_tex_color = texture(albedo_alpha_tex, _UV);
	ALBEDO = albedo_alpha_tex_color.rgb * albedo_alpha_color.rgb;
	ALPHA = albedo_alpha_tex_color.a * albedo_alpha_color.a;
	ALPHA *= clamp(smoothstep(distance_fade_distance_min, distance_fade_distance_max, -VERTEX.z), 0.0, 1.0);
	float depth_tex = textureLod(DEPTH_TEXTURE, SCREEN_UV, 0.0).r;
	vec4 world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, depth_tex * 2.0 - 1.0, 1.0);
	world_pos.xyz /= world_pos.w;
	ALPHA *= clamp(1.0 - smoothstep(world_pos.z + proximity_fade_distance, world_pos.z, VERTEX.z), 0.0, 1.0);
}
void light() {
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 7 )
shader_param/albedo_alpha_color = Color( 0.14902, 0.188235, 0.223529, 1 )
shader_param/distance_fade_distance_min = 1.0
shader_param/distance_fade_distance_max = 3.0
shader_param/proximity_fade_distance = 1.0
shader_param/albedo_alpha_tex = ExtResource( 2 )

[sub_resource type="QuadMesh" id=4]
size = Vector2( 3.737, 3.068 )
center_offset = Vector3( 0, -1.419, 0 )

[sub_resource type="Shader" id=8]
code = "shader_type spatial;
render_mode blend_add, diffuse_lambert, specular_disabled, cull_disabled, depth_draw_opaque, shadows_disabled, unshaded;
 
//__ADD_PROPERTY::albedo_alpha_tex::TEXTURE
uniform sampler2D albedo_alpha_tex: hint_albedo;
//__ADD_PROPERTY::albedo_alpha_color::COLOR
uniform vec4 albedo_alpha_color: hint_color;
//__ADD_PROPERTY::distance_fade_distance_min::FLOAT
uniform float distance_fade_distance_min;
//__ADD_PROPERTY::distance_fade_distance_max::FLOAT
uniform float distance_fade_distance_max;
//__ADD_PROPERTY::proximity_fade_distance::FLOAT
uniform float proximity_fade_distance;
void vertex() {
	COLOR = COLOR;
}
void fragment() {
	ALBEDO = vec3(0.0);
	METALLIC = 0.0;
	SPECULAR = 0.0;
	ROUGHNESS = 1.0;
	AO = 1.0;
	vec2 _UV = UV;
	vec4 albedo_alpha_tex_color = texture(albedo_alpha_tex, _UV);
	ALBEDO = albedo_alpha_tex_color.rgb * albedo_alpha_color.rgb;
	ALPHA = albedo_alpha_tex_color.a * albedo_alpha_color.a;
	ALPHA *= clamp(smoothstep(distance_fade_distance_min, distance_fade_distance_max, -VERTEX.z), 0.0, 1.0);
	float depth_tex = textureLod(DEPTH_TEXTURE, SCREEN_UV, 0.0).r;
	vec4 world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, depth_tex * 2.0 - 1.0, 1.0);
	world_pos.xyz /= world_pos.w;
	ALPHA *= clamp(1.0 - smoothstep(world_pos.z + proximity_fade_distance, world_pos.z, VERTEX.z), 0.0, 1.0);
}
void light() {
}
"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 8 )
shader_param/albedo_alpha_color = Color( 0.392157, 0.482353, 0.521569, 1 )
shader_param/distance_fade_distance_min = 1.0
shader_param/distance_fade_distance_max = 3.0
shader_param/proximity_fade_distance = 1.0
shader_param/albedo_alpha_tex = ExtResource( 1 )

[node name="light_volume0" type="Spatial"]

[node name="glow0" type="MeshInstance" parent="."]
transform = Transform( 1.41778, 0, 0, 0, 1.41778, 0, 0, 0, 1.41778, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="volume0" type="MeshInstance" parent="."]
mesh = SubResource( 4 )
material/0 = SubResource( 6 )
